// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/oanatmaria/ethblkcn-observer/storage (interfaces: Storage)

// Package storage is a generated GoMock package.
package storage

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockStorage is a mock of Storage interface.
type MockStorage struct {
	ctrl     *gomock.Controller
	recorder *MockStorageMockRecorder
}

// MockStorageMockRecorder is the mock recorder for MockStorage.
type MockStorageMockRecorder struct {
	mock *MockStorage
}

// NewMockStorage creates a new mock instance.
func NewMockStorage(ctrl *gomock.Controller) *MockStorage {
	mock := &MockStorage{ctrl: ctrl}
	mock.recorder = &MockStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStorage) EXPECT() *MockStorageMockRecorder {
	return m.recorder
}

// AddObservedAddress mocks base method.
func (m *MockStorage) AddObservedAddress(arg0 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddObservedAddress", arg0)
	ret0, _ := ret[0].(bool)
	return ret0
}

// AddObservedAddress indicates an expected call of AddObservedAddress.
func (mr *MockStorageMockRecorder) AddObservedAddress(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddObservedAddress", reflect.TypeOf((*MockStorage)(nil).AddObservedAddress), arg0)
}

// AddTransactions mocks base method.
func (m *MockStorage) AddTransactions(arg0 ...Transaction) {
	m.ctrl.T.Helper()
	varargs := []interface{}{}
	for _, a := range arg0 {
		varargs = append(varargs, a)
	}
	m.ctrl.Call(m, "AddTransactions", varargs...)
}

// AddTransactions indicates an expected call of AddTransactions.
func (mr *MockStorageMockRecorder) AddTransactions(arg0 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddTransactions", reflect.TypeOf((*MockStorage)(nil).AddTransactions), arg0...)
}

// GetCurrentBlock mocks base method.
func (m *MockStorage) GetCurrentBlock() int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentBlock")
	ret0, _ := ret[0].(int)
	return ret0
}

// GetCurrentBlock indicates an expected call of GetCurrentBlock.
func (mr *MockStorageMockRecorder) GetCurrentBlock() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentBlock", reflect.TypeOf((*MockStorage)(nil).GetCurrentBlock))
}

// GetTransactions mocks base method.
func (m *MockStorage) GetTransactions(arg0 string) []Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTransactions", arg0)
	ret0, _ := ret[0].([]Transaction)
	return ret0
}

// GetTransactions indicates an expected call of GetTransactions.
func (mr *MockStorageMockRecorder) GetTransactions(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTransactions", reflect.TypeOf((*MockStorage)(nil).GetTransactions), arg0)
}

// UpdateCurrentBlock mocks base method.
func (m *MockStorage) UpdateCurrentBlock(arg0 int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateCurrentBlock", arg0)
}

// UpdateCurrentBlock indicates an expected call of UpdateCurrentBlock.
func (mr *MockStorageMockRecorder) UpdateCurrentBlock(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateCurrentBlock", reflect.TypeOf((*MockStorage)(nil).UpdateCurrentBlock), arg0)
}
